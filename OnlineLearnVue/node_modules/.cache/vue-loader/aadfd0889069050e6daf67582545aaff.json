{"remainingRequest":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\src\\views\\studentweb\\essentialinformation\\EssentiaInfo.vue?vue&type=template&id=3f16473e&scoped=true&","dependencies":[{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\src\\views\\studentweb\\essentialinformation\\EssentiaInfo.vue","mtime":1711182505359},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711182484313},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1711182506222},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711182484313},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1711182506214}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}