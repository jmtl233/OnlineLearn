{"remainingRequest":"D:\\OnlineLearn\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\OnlineLearn\\OnlineLearnVue\\src\\views\\admin\\classmanagement\\ClassManagement.vue?vue&type=style&index=0&id=782b157d&scoped=true&lang=css&","dependencies":[{"path":"D:\\OnlineLearn\\OnlineLearnVue\\src\\views\\admin\\classmanagement\\ClassManagement.vue","mtime":1744463069108},{"path":"D:\\OnlineLearn\\OnlineLearnVue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1711182487975},{"path":"D:\\OnlineLearn\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1711182506221},{"path":"D:\\OnlineLearn\\OnlineLearnVue\\node_modules\\postcss-loader\\src\\index.js","mtime":1711182496599},{"path":"D:\\OnlineLearn\\OnlineLearnVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711182484313},{"path":"D:\\OnlineLearn\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1711182506214}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5wYWdpbmF0aW9uIHsNCiAgICBtYXJnaW4tdG9wOiAyMHB4Ow0KICAgIHRleHQtYWxpZ246IHJpZ2h0Ow0KfQ0KDQovKiDmt7vliqDmjInpkq7lr7npvZDmoLflvI8gKi8NCi5hY3Rpb24tYnV0dG9ucyB7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDsNCiAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KfQ0KLmJ0bi1maXggew0KICAgIGZsZXg6IDE7DQogICAgbWFyZ2luLWxlZnQ6IDVweDsNCiAgICBtYXJnaW4tcmlnaHQ6IDVweDsNCiAgICBtaW4td2lkdGg6IDQwcHg7ICAvKiDmoLnmja7lrp7pmYXmg4XlhrXosIPmlbQgKi8NCn0NCg=="},{"version":3,"sources":["ClassManagement.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2QA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ClassManagement.vue","sourceRoot":"src/views/admin/classmanagement","sourcesContent":["<template>\r\n    <div>\r\n        <el-button @click=\"handleAdd\" type=\"primary\">新增班级</el-button>\r\n\r\n        <!-- 班级表单弹窗 -->\r\n        <el-dialog\r\n                :title=\"dialogTitle\"\r\n                :visible.sync=\"dialogFormVisible\"\r\n                @close=\"handleDialogClose\">\r\n            <el-form\r\n                    :model=\"form\"\r\n                    :rules=\"rules\"\r\n                    ref=\"formRef\"\r\n                    label-width=\"120px\">\r\n                <el-form-item label=\"班级名称：\" prop=\"className\">\r\n                    <el-input\r\n                            v-model=\"form.className\"\r\n                            placeholder=\"请输入班级名称\"\r\n                            clearable></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"班主任：\" prop=\"userId\">\r\n                    <el-select\r\n                            v-model=\"form.userId\"\r\n                            placeholder=\"请选择班主任\"\r\n                            clearable\r\n                            filterable>\r\n                        <el-option\r\n                                v-for=\"teacher in teacherList\"\r\n                                :key=\"teacher.id\"\r\n                                :label=\"teacher.userName\"\r\n                                :value=\"teacher.id\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n            </el-form>\r\n\r\n            <div slot=\"footer\">\r\n                <el-button @click=\"dialogFormVisible = false\">取消</el-button>\r\n                <el-button\r\n                        type=\"primary\"\r\n                        @click=\"handleSubmit\"\r\n                        :loading=\"submitting\">确定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n\r\n        <!-- 班级列表表格 -->\r\n        <el-table\r\n                :data=\"tableData\"\r\n                border\r\n                stripe\r\n                style=\"width: 100%\"\r\n                v-loading=\"loading\">\r\n            <el-table-column\r\n                    prop=\"createTime\"\r\n                    label=\"创建时间\"\r\n                    width=\"180\">\r\n            </el-table-column>\r\n            <el-table-column\r\n                    prop=\"userName\"\r\n                    label=\"班主任\"\r\n                    width=\"180\">\r\n            </el-table-column>\r\n            <el-table-column\r\n                    prop=\"className\"\r\n                    label=\"班级名称\">\r\n            </el-table-column>\r\n\r\n            <el-table-column\r\n                    label=\"操作\"\r\n                    width=\"200\"\r\n                    fixed=\"right\">\r\n                <template v-slot=\"{row}\">\r\n                    <div class=\"action-buttons\">\r\n                        <el-button\r\n                                type=\"primary\"\r\n                                size=\"mini\"\r\n                                class=\"btn-fix\"\r\n                                @click=\"handleEdit(row)\">编辑</el-button>\r\n                        <el-button\r\n                                type=\"danger\"\r\n                                size=\"mini\"\r\n                                class=\"btn-fix\"\r\n                                @click=\"handleDelete(row)\">删除</el-button>\r\n                    </div>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n\r\n        <!-- 分页组件 -->\r\n        <el-pagination\r\n                class=\"pagination\"\r\n                @size-change=\"handleSizeChange\"\r\n                @current-change=\"handleCurrentChange\"\r\n                :current-page=\"pagination.page\"\r\n                :page-sizes=\"[10, 20, 30, 50]\"\r\n                :page-size=\"pagination.pageSize\"\r\n                layout=\"total, sizes, prev, pager, next, jumper\"\r\n                :total=\"total\">\r\n        </el-pagination>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n    listClass,\r\n    deleteClass,\r\n    listTeacher,\r\n    saveClass,\r\n    updateClass\r\n} from '../../../api/admin/classmanagement.js'\r\n\r\nexport default {\r\n    name: 'ClassManagement',\r\n    data() {\r\n        return {\r\n            // 弹窗相关\r\n            dialogFormVisible: false,\r\n            dialogType: 'add', // add/edit\r\n            submitting: false,\r\n\r\n            // 表单数据\r\n            form: {\r\n                id: '',\r\n                className: '',\r\n                userId: null\r\n            },\r\n\r\n            // 验证规则\r\n            rules: {\r\n                className: [\r\n                    { required: true, message: '请输入班级名称', trigger: 'blur' }\r\n                ],\r\n                userId: [\r\n                    { required: true, message: '请选择班主任', trigger: 'change' }\r\n                ]\r\n            },\r\n\r\n            // 教师列表\r\n            teacherList: [],\r\n\r\n            // 表格数据\r\n            tableData: [],\r\n            loading: false,\r\n\r\n            // 分页\r\n            pagination: {\r\n                page: 1,\r\n                pageSize: 10\r\n            },\r\n            total: 0\r\n        }\r\n    },\r\n\r\n    computed: {\r\n        dialogTitle() {\r\n            return this.dialogType === 'add' ? '新增班级' : '编辑班级'\r\n        }\r\n    },\r\n\r\n    created() {\r\n        this.fetchData()\r\n        this.fetchTeachers()\r\n    },\r\n\r\n    methods: {\r\n        // 初始化数据\r\n        async fetchData() {\r\n            this.loading = true\r\n            try {\r\n                const res = await listClass({\r\n                    page: this.pagination.page,\r\n                    pageSize: this.pagination.pageSize\r\n                })\r\n                this.tableData = res.data.resultData.data\r\n                this.total = res.data.resultData.total\r\n            } finally {\r\n                this.loading = false\r\n            }\r\n        },\r\n\r\n        // 获取教师列表\r\n        async fetchTeachers() {\r\n            const res = await listTeacher({ roleId: 2 })\r\n            this.teacherList = res.data.resultData\r\n        },\r\n\r\n        // 打开新增弹窗\r\n        handleAdd() {\r\n            this.dialogType = 'add'\r\n            this.dialogFormVisible = true\r\n        },\r\n\r\n        // 打开编辑弹窗\r\n        handleEdit(row) {\r\n            this.dialogType = 'edit'\r\n            this.form = {\r\n                id: row.id,\r\n                className: row.className,\r\n                userId: row.userId\r\n            }\r\n            this.dialogFormVisible = true\r\n        },\r\n\r\n        // 提交表单\r\n        async handleSubmit() {\r\n            try {\r\n                const valid = await this.$refs.formRef.validate()\r\n                if (!valid) return\r\n\r\n                this.submitting = true\r\n\r\n                const payload = { ...this.form }\r\n                if (this.dialogType === 'add') {\r\n                    await saveClass(payload)\r\n                    this.$message.success('新增成功')\r\n                } else {\r\n                    await updateClass(payload)\r\n                    this.$message.success('修改成功')\r\n                }\r\n\r\n                this.dialogFormVisible = false\r\n                this.fetchData()\r\n            } catch (error) {\r\n                console.error('操作失败:', error)\r\n            } finally {\r\n                this.submitting = false\r\n            }\r\n        },\r\n\r\n        // 删除班级\r\n        async handleDelete(row) {\r\n            try {\r\n                await this.$confirm('确定删除该班级吗？', '提示', {\r\n                    type: 'warning'\r\n                })\r\n\r\n                await deleteClass({ id: row.id })\r\n                this.$message.success('删除成功')\r\n                this.fetchData()\r\n            } catch (error) {\r\n                if (error !== 'cancel') {\r\n                    this.$message.error('删除失败')\r\n                }\r\n            }\r\n        },\r\n\r\n        // 分页处理\r\n        handleSizeChange(pageSize) {\r\n            this.pagination.pageSize = pageSize\r\n            this.fetchData()\r\n        },\r\n\r\n        handleCurrentChange(page) {\r\n            this.pagination.page = page\r\n            this.fetchData()\r\n        },\r\n\r\n        // 弹窗关闭时重置表单\r\n        handleDialogClose() {\r\n            this.$refs.formRef.resetFields()\r\n            this.form.id = ''\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.pagination {\r\n    margin-top: 20px;\r\n    text-align: right;\r\n}\r\n\r\n/* 添加按钮对齐样式 */\r\n.action-buttons {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n}\r\n.btn-fix {\r\n    flex: 1;\r\n    margin-left: 5px;\r\n    margin-right: 5px;\r\n    min-width: 40px;  /* 根据实际情况调整 */\r\n}\r\n</style>"]}]}