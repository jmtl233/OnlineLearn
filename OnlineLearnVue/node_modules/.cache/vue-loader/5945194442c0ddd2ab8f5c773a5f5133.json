{"remainingRequest":"E:\\OnlineLearn\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\OnlineLearn\\OnlineLearnVue\\src\\views\\coursemanagement\\CourseManagement.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\OnlineLearn\\OnlineLearnVue\\src\\views\\coursemanagement\\CourseManagement.vue","mtime":1748023967835},{"path":"E:\\OnlineLearn\\OnlineLearnVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711182484313},{"path":"E:\\OnlineLearn\\OnlineLearnVue\\node_modules\\babel-loader\\lib\\index.js","mtime":1711182482575},{"path":"E:\\OnlineLearn\\OnlineLearnVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711182484313},{"path":"E:\\OnlineLearn\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1711182506214}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBsaXN0QWxsU2hkdWxlLCBhZGRTaGR1bGUgfSBmcm9tICIuLi8uLi9hcGkvc2hkdWxlIjsNCmltcG9ydCBDb29raWVzIGZyb20gImpzLWNvb2tpZSI7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgICBuYW1lOiAiQ291cnNlTWFuYWdlbWVudCIsDQogICAgZGF0YSgpIHsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICAgIHNoZHVsZURhdGE6IFtdLA0KICAgICAgICAgICAgdG90YWxDb3VudDogMCwNCiAgICAgICAgICAgIHBhZ2U6IHsNCiAgICAgICAgICAgICAgICBwYWdlOiAxLA0KICAgICAgICAgICAgICAgIHBhZ2VTaXplOiAxMCwNCiAgICAgICAgICAgICAgICB1c2VySWQ6IENvb2tpZXMuZ2V0KCd1c2VySWQnKQ0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIC8vIOa3u+WKoOacrOWcsOe8k+WtmOiusOW9leW3suWbnuWkjeeahOmXrumimElEDQogICAgICAgICAgICBhbnN3ZXJlZFF1ZXN0aW9uSWRzOiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhbnN3ZXJlZFF1ZXN0aW9uSWRzJykgfHwgJ1tdJyksDQogICAgICAgICAgICAvLyDmt7vliqDmnKzlnLDnvJPlrZjorrDlvZXlm57lpI3ml7bpl7QNCiAgICAgICAgICAgIGFuc3dlcmVkUXVlc3Rpb25UaW1lczogSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnYW5zd2VyZWRRdWVzdGlvblRpbWVzJykgfHwgJ3t9JykNCiAgICAgICAgfQ0KICAgIH0sDQogICAgY3JlYXRlZCgpIHsNCiAgICAgICAgdGhpcy5saXN0U2hkdWxlKCkNCiAgICB9LA0KICAgIG1ldGhvZHM6IHsNCiAgICAgICAgLy8g5Zue5aSN5Yqf6IO9DQogICAgICAgIGFzeW5jIHJlc3RvcihpdGVtKSB7DQogICAgICAgICAgICB0cnkgew0KICAgICAgICAgICAgICAgIC8vIOS/neWtmOWOn+Wni+eKtuaAgeeUqOS6jumUmeivr+Wbnua7mg0KICAgICAgICAgICAgICAgIGNvbnN0IG9yaWdpbmFsU3RhdHVzID0gaXRlbS5zdGF0dXMNCiAgICAgICAgICAgICAgICBjb25zdCBvcmlnaW5hbFJlc3RvcmUgPSBpdGVtLnJlc3RvcmUNCg0KICAgICAgICAgICAgICAgIC8vIOehruS/neeKtuaAgeWAvOato+ehruiuvue9ruS4ujHvvIjlt7Llm57lpI3vvIkNCiAgICAgICAgICAgICAgICBpdGVtLnN0YXR1cyA9IDENCiAgICAgICAgICAgICAgICBpdGVtLnJlc3RvcmUgPSBpdGVtLnJlc3RvcmUgfHwgJycNCg0KICAgICAgICAgICAgICAgIC8vIOa3u+WKoOabtOaWsOaXtumXtA0KICAgICAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRUaW1lID0gbmV3IERhdGUoKS50b0xvY2FsZVN0cmluZygpDQogICAgICAgICAgICAgICAgaXRlbS51cGRhdGVUaW1lID0gY3VycmVudFRpbWUNCg0KICAgICAgICAgICAgICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgYWRkU2hkdWxlKGl0ZW0pDQogICAgICAgICAgICAgICAgaWYgKGRhdGEuY29kZSA9PT0gMjAwKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5Zue5aSN5oiQ5YqfJykNCg0KICAgICAgICAgICAgICAgICAgICAvLyDnoa7kv53mnKzlnLDmlbDmja7mm7TmlrANCiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEucmVzdWx0RGF0YSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihpdGVtLCBkYXRhLnJlc3VsdERhdGEpDQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgICAgICAvLyDlsIblt7Llm57lpI3nmoTpl67pophJROa3u+WKoOWIsOacrOWcsOe8k+WtmA0KICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXMuYW5zd2VyZWRRdWVzdGlvbklkcy5pbmNsdWRlcyhpdGVtLmlkKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hbnN3ZXJlZFF1ZXN0aW9uSWRzLnB1c2goaXRlbS5pZCkNCiAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdhbnN3ZXJlZFF1ZXN0aW9uSWRzJywgSlNPTi5zdHJpbmdpZnkodGhpcy5hbnN3ZXJlZFF1ZXN0aW9uSWRzKSkNCiAgICAgICAgICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAgICAgICAgIC8vIOS/neWtmOWbnuWkjeaXtumXtOWIsOacrOWcsOWtmOWCqA0KICAgICAgICAgICAgICAgICAgICB0aGlzLmFuc3dlcmVkUXVlc3Rpb25UaW1lc1tpdGVtLmlkXSA9IGN1cnJlbnRUaW1lDQogICAgICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdhbnN3ZXJlZFF1ZXN0aW9uVGltZXMnLCBKU09OLnN0cmluZ2lmeSh0aGlzLmFuc3dlcmVkUXVlc3Rpb25UaW1lcykpDQoNCiAgICAgICAgICAgICAgICAgICAgLy8g5LiN5Yi35paw5pW05Liq5YiX6KGo77yM6ICM5piv55u05o6l5pu05paw5b2T5YmN6aG555qE54q25oCBDQogICAgICAgICAgICAgICAgICAgIHRoaXMuJHNldChpdGVtLCAnc3RhdHVzJywgMSkNCiAgICAgICAgICAgICAgICAgICAgdGhpcy4kc2V0KGl0ZW0sICd1cGRhdGVUaW1lJywgY3VycmVudFRpbWUpDQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g5Zue5rua54q25oCBDQogICAgICAgICAgICAgICAgICAgIGl0ZW0uc3RhdHVzID0gb3JpZ2luYWxTdGF0dXMNCiAgICAgICAgICAgICAgICAgICAgaXRlbS5yZXN0b3JlID0gb3JpZ2luYWxSZXN0b3JlDQogICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+WbnuWkjeWksei0pScpDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCflm57lpI3lpLHotKU6JywgZXJyb3IpDQogICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign5Zue5aSN5aSx6LSlJykNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICAvLyDojrflj5bmlbDmja7liJfooagNCiAgICAgICAgYXN5bmMgbGlzdFNoZHVsZSgpIHsNCiAgICAgICAgICAgIHRyeSB7DQogICAgICAgICAgICAgICAgY29uc3QgeyBkYXRhIH0gPSBhd2FpdCBsaXN0QWxsU2hkdWxlKHRoaXMucGFnZSkNCiAgICAgICAgICAgICAgICBpZiAoZGF0YS5jb2RlID09PSAyMDApIHsNCiAgICAgICAgICAgICAgICAgICAgLy8g6I635Y+W5paw5pWw5o2uDQogICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld0RhdGEgPSBkYXRhLnJlc3VsdERhdGEuZGF0YQ0KDQogICAgICAgICAgICAgICAgICAgIC8vIOS9v+eUqOacrOWcsOe8k+WtmOehruS/neW3suWbnuWkjeeahOmhueebrueKtuaAgeS/neaMgeS4jeWPmA0KICAgICAgICAgICAgICAgICAgICBuZXdEYXRhLmZvckVhY2goaXRlbSA9PiB7DQogICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5hbnN3ZXJlZFF1ZXN0aW9uSWRzLmluY2x1ZGVzKGl0ZW0uaWQpKSB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5zdGF0dXMgPSAxDQoNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyDku47mnKzlnLDlrZjlgqjojrflj5bml7bpl7Tlubborr7nva4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5hbnN3ZXJlZFF1ZXN0aW9uVGltZXNbaXRlbS5pZF0pIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS51cGRhdGVUaW1lID0gdGhpcy5hbnN3ZXJlZFF1ZXN0aW9uVGltZXNbaXRlbS5pZF0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCFpdGVtLnVwZGF0ZVRpbWUpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8g5aaC5p6c5rKh5pyJ5a2Y5YKo55qE5pe26Ze077yM5L2/55So5b2T5YmN5pe26Ze05bm25L+d5a2YDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRUaW1lID0gbmV3IERhdGUoKS50b0xvY2FsZVN0cmluZygpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0udXBkYXRlVGltZSA9IGN1cnJlbnRUaW1lDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYW5zd2VyZWRRdWVzdGlvblRpbWVzW2l0ZW0uaWRdID0gY3VycmVudFRpbWUNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2Fuc3dlcmVkUXVlc3Rpb25UaW1lcycsIEpTT04uc3RyaW5naWZ5KHRoaXMuYW5zd2VyZWRRdWVzdGlvblRpbWVzKSkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIH0pDQoNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaGR1bGVEYXRhID0gbmV3RGF0YQ0KICAgICAgICAgICAgICAgICAgICB0aGlzLnRvdGFsQ291bnQgPSBkYXRhLnJlc3VsdERhdGEudG90YWwNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9IGNhdGNoIChlcnJvcikgew0KICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ+iOt+WPluaVsOaNruWksei0pTonLCBlcnJvcikNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSwNCg0KICAgICAgICBoYW5kbGVTaXplQ2hhbmdlKHNpemUpIHsNCiAgICAgICAgICAgIHRoaXMucGFnZS5wYWdlU2l6ZSA9IHNpemUNCiAgICAgICAgICAgIHRoaXMubGlzdFNoZHVsZSgpDQogICAgICAgIH0sDQoNCiAgICAgICAgaGFuZGxlQ3VycmVudENoYW5nZShwYWdlKSB7DQogICAgICAgICAgICB0aGlzLnBhZ2UucGFnZSA9IHBhZ2UNCiAgICAgICAgICAgIHRoaXMubGlzdFNoZHVsZSgpDQogICAgICAgIH0NCiAgICB9DQp9DQo="},{"version":3,"sources":["CourseManagement.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"CourseManagement.vue","sourceRoot":"src/views/coursemanagement","sourcesContent":["<template>\r\n    <div class=\"communication-container\">\r\n        <div\r\n            v-if=\"shduleData.length <= 0\"\r\n            class=\"empty-state\"\r\n        >\r\n            <i class=\"el-icon-document\"></i>\r\n            <span>暂无沟通记录</span>\r\n        </div>\r\n\r\n        <el-timeline v-else>\r\n            <el-timeline-item\r\n                v-for=\"t in shduleData\"\r\n                :key=\"t.id\"\r\n                :timestamp=\"t.createTime\"\r\n                placement=\"top\"\r\n                :color=\"t.status === 1 ? '#67C23A' : '#E6A23C'\"\r\n            >\r\n                <el-card\r\n                    :class=\"['message-card', t.status === 1 ? 'answered' : 'pending']\"\r\n                    shadow=\"hover\"\r\n                >\r\n                    <!-- 状态标签 -->\r\n                    <div class=\"status-tag\">\r\n                        <el-tag\r\n                            :type=\"t.status === 1 ? 'success' : 'warning'\"\r\n                            effect=\"dark\"\r\n                        >\r\n                            {{ t.status === 1 ? '已回复' : '待回复' }}\r\n                        </el-tag>\r\n                    </div>\r\n\r\n                    <!-- 沟通主体 -->\r\n                    <div class=\"communication-body\">\r\n                        <div class=\"participants\">\r\n                            <div class=\"participant\">\r\n                                <span class=\"name\">{{ t.senderName }}</span>\r\n                                <el-tag type=\"info\" size=\"mini\">提问者</el-tag>\r\n                            </div>\r\n                            <div class=\"participant\">\r\n                                <span class=\"name\">{{ t.recipientName }}</span>\r\n                                <el-tag type=\"info\" size=\"mini\">回答者</el-tag>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <el-divider content-position=\"left\">问题详情</el-divider>\r\n\r\n                        <div class=\"content-section\">\r\n                            <div class=\"question\">\r\n                                <h4 class=\"section-title\">\r\n                                    <i class=\"el-icon-question\"></i>\r\n                                    问题描述\r\n                                </h4>\r\n                                <el-input\r\n                                    type=\"textarea\"\r\n                                    :rows=\"2\"\r\n                                    :value=\"t.content\"\r\n                                    readonly\r\n                                    resize=\"none\"\r\n                                    class=\"readonly-input\"\r\n                                ></el-input>\r\n                            </div>\r\n\r\n                            <div class=\"answer\">\r\n                                <h4 class=\"section-title\">\r\n                                    <i class=\"el-icon-chat-dot-round\"></i>\r\n                                    {{ t.status === 1 ? '回复内容' : '等待回复' }}\r\n                                </h4>\r\n                                <el-input\r\n                                    type=\"textarea\"\r\n                                    :rows=\"2\"\r\n                                    v-model=\"t.restore\"\r\n                                    :readonly=\"t.status === 1\"\r\n                                    :class=\"{'answered-input': t.status === 1}\"\r\n                                    :placeholder=\"t.status === 1 ? '' : '请输入回复内容'\"\r\n                                ></el-input>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- 操作按钮 -->\r\n                        <div class=\"action-bar\">\r\n                            <el-button\r\n                                v-if=\"t.status !== 1\"\r\n                                type=\"success\"\r\n                                icon=\"el-icon-check\"\r\n                                @click=\"restor(t)\"\r\n                            >\r\n                                提交回复\r\n                            </el-button>\r\n                            <div v-else class=\"answered-time\">\r\n                                <i class=\"el-icon-success\"></i>\r\n                                <span>已回复于 {{ t.updateTime }}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </el-card>\r\n            </el-timeline-item>\r\n        </el-timeline>\r\n\r\n        <el-pagination\r\n            v-if=\"shduleData.length > 0\"\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"page.page\"\r\n            :page-sizes=\"[10, 20, 30, 40]\"\r\n            :page-size=\"page.pageSize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"totalCount\"\r\n            class=\"pagination\"\r\n        ></el-pagination>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { listAllShdule, addShdule } from \"../../api/shdule\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport default {\r\n    name: \"CourseManagement\",\r\n    data() {\r\n        return {\r\n            shduleData: [],\r\n            totalCount: 0,\r\n            page: {\r\n                page: 1,\r\n                pageSize: 10,\r\n                userId: Cookies.get('userId')\r\n            },\r\n            // 添加本地缓存记录已回复的问题ID\r\n            answeredQuestionIds: JSON.parse(localStorage.getItem('answeredQuestionIds') || '[]'),\r\n            // 添加本地缓存记录回复时间\r\n            answeredQuestionTimes: JSON.parse(localStorage.getItem('answeredQuestionTimes') || '{}')\r\n        }\r\n    },\r\n    created() {\r\n        this.listShdule()\r\n    },\r\n    methods: {\r\n        // 回复功能\r\n        async restor(item) {\r\n            try {\r\n                // 保存原始状态用于错误回滚\r\n                const originalStatus = item.status\r\n                const originalRestore = item.restore\r\n\r\n                // 确保状态值正确设置为1（已回复）\r\n                item.status = 1\r\n                item.restore = item.restore || ''\r\n\r\n                // 添加更新时间\r\n                const currentTime = new Date().toLocaleString()\r\n                item.updateTime = currentTime\r\n\r\n                const { data } = await addShdule(item)\r\n                if (data.code === 200) {\r\n                    this.$message.success('回复成功')\r\n\r\n                    // 确保本地数据更新\r\n                    if (data.resultData) {\r\n                        Object.assign(item, data.resultData)\r\n                    }\r\n\r\n                    // 将已回复的问题ID添加到本地缓存\r\n                    if (!this.answeredQuestionIds.includes(item.id)) {\r\n                        this.answeredQuestionIds.push(item.id)\r\n                        localStorage.setItem('answeredQuestionIds', JSON.stringify(this.answeredQuestionIds))\r\n                    }\r\n\r\n                    // 保存回复时间到本地存储\r\n                    this.answeredQuestionTimes[item.id] = currentTime\r\n                    localStorage.setItem('answeredQuestionTimes', JSON.stringify(this.answeredQuestionTimes))\r\n\r\n                    // 不刷新整个列表，而是直接更新当前项的状态\r\n                    this.$set(item, 'status', 1)\r\n                    this.$set(item, 'updateTime', currentTime)\r\n                } else {\r\n                    // 回滚状态\r\n                    item.status = originalStatus\r\n                    item.restore = originalRestore\r\n                    this.$message.error('回复失败')\r\n                }\r\n            } catch (error) {\r\n                console.error('回复失败:', error)\r\n                this.$message.error('回复失败')\r\n            }\r\n        },\r\n\r\n        // 获取数据列表\r\n        async listShdule() {\r\n            try {\r\n                const { data } = await listAllShdule(this.page)\r\n                if (data.code === 200) {\r\n                    // 获取新数据\r\n                    const newData = data.resultData.data\r\n\r\n                    // 使用本地缓存确保已回复的项目状态保持不变\r\n                    newData.forEach(item => {\r\n                        if (this.answeredQuestionIds.includes(item.id)) {\r\n                            item.status = 1\r\n\r\n                            // 从本地存储获取时间并设置\r\n                            if (this.answeredQuestionTimes[item.id]) {\r\n                                item.updateTime = this.answeredQuestionTimes[item.id]\r\n                            } else if (!item.updateTime) {\r\n                                // 如果没有存储的时间，使用当前时间并保存\r\n                                const currentTime = new Date().toLocaleString()\r\n                                item.updateTime = currentTime\r\n                                this.answeredQuestionTimes[item.id] = currentTime\r\n                                localStorage.setItem('answeredQuestionTimes', JSON.stringify(this.answeredQuestionTimes))\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                    this.shduleData = newData\r\n                    this.totalCount = data.resultData.total\r\n                }\r\n            } catch (error) {\r\n                console.error('获取数据失败:', error)\r\n            }\r\n        },\r\n\r\n        handleSizeChange(size) {\r\n            this.page.pageSize = size\r\n            this.listShdule()\r\n        },\r\n\r\n        handleCurrentChange(page) {\r\n            this.page.page = page\r\n            this.listShdule()\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 原有样式保持不变 */\r\n.communication-container {\r\n    max-width: 1200px;\r\n    margin: 0 auto;\r\n    padding: 30px 20px;\r\n}\r\n\r\n.empty-state {\r\n    text-align: center;\r\n    padding: 60px 0;\r\n    color: #909399;\r\n    font-size: 18px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n.empty-state i {\r\n    font-size: 48px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.message-card {\r\n    position: relative;\r\n    border-radius: 8px;\r\n    margin: 10px 0;\r\n}\r\n\r\n.message-card.answered {\r\n    border-left: 3px solid #67C23A;\r\n}\r\n\r\n.message-card.pending {\r\n    border-left: 3px solid #E6A23C;\r\n}\r\n\r\n.status-tag {\r\n    position: absolute;\r\n    right: 20px;\r\n    top: -10px;\r\n}\r\n\r\n.participants {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 0;\r\n}\r\n\r\n.participant {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n}\r\n\r\n.name {\r\n    font-weight: 500;\r\n    color: #303133;\r\n}\r\n\r\n.content-section {\r\n    margin: 20px 0;\r\n}\r\n\r\n.section-title {\r\n    color: #606266;\r\n    font-size: 14px;\r\n    margin: 10px 0;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 6px;\r\n}\r\n\r\n.readonly-input >>> .el-textarea__inner {\r\n    background-color: #f5f7fa;\r\n    cursor: default;\r\n}\r\n\r\n.answered-input >>> .el-textarea__inner {\r\n    background-color: #f6ffed;\r\n    border-color: #b7eb8f;\r\n}\r\n\r\n.action-bar {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n}\r\n\r\n.answered-time {\r\n    color: #67C23A;\r\n    font-size: 13px;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n}\r\n\r\n.pagination {\r\n    margin-top: 30px;\r\n    text-align: center;\r\n}\r\n\r\n.el-timeline {\r\n    padding-left: 20px;\r\n}\r\n</style>"]}]}