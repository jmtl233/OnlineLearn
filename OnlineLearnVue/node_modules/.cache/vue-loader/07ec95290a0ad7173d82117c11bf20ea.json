{"remainingRequest":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\src\\views\\studentweb\\onlinelearn\\DetailOnlineWeb.vue?vue&type=style&index=0&id=2a905716&scoped=true&lang=css&","dependencies":[{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\src\\views\\studentweb\\onlinelearn\\DetailOnlineWeb.vue","mtime":1716809604752},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1711182487975},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1711182506221},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\node_modules\\postcss-loader\\src\\index.js","mtime":1711182496599},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711182484313},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1711182506214}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouY29udGFpbnZpZGVvIHsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCg0KfQ0KDQouaXRlbSB7DQogICAgd2lkdGg6IDIwcHg7DQogICAgaGVpZ2h0OiAyMHB4Ow0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0Ow0KfQ0KDQoNCi52aWRlb3Mgew0KICAgIHdpZHRoOiAxOSU7DQogICAgbWFyZ2luOiAwIDAgMCA4cHg7DQogICAgaGVpZ2h0OiA1MCU7DQogICAgYm9yZGVyOiAzcHggc29saWQgZ3JleTsNCn0NCg0KI3ZpZGVvLXRpdGxlIHsNCiAgICBmb250LXNpemU6IDI0cHg7DQogICAgY29sb3I6IGJsYWNrOw0KICAgIGZvbnQtd2VpZ2h0OiA2MDA7DQp9DQoNCi52aWQgew0KICAgIHdpZHRoOiA4MCU7DQogICAgaGVpZ2h0OiAyMCU7DQp9DQo="},{"version":3,"sources":["DetailOnlineWeb.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsWA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"DetailOnlineWeb.vue","sourceRoot":"src/views/studentweb/onlinelearn","sourcesContent":["<template>\r\n    <div style=\"min-height: 1080px; padding: 10px;\">\r\n        <el-button type=\"primary\" @click=\"addVideo()\" v-if=\"roleId == 2\"> 新增视频</el-button>\r\n        <div style=\"height: 20px\"></div>\r\n        <div class=\"containvideo\">\r\n\r\n            <el-dialog title=\"请填写视频内容\" :visible.sync=\"goDealDialogVisible\" width=\"50%\" :show-close=\"false\"\r\n                :before-close=\"goDealHandleClose\">\r\n                <template>\r\n                    <div>\r\n                        <div style=\"margin: 10px;\"></div>\r\n                        <el-form label-width=\"100px\">\r\n                            <el-form-item label=\"视频标题\">\r\n                                <el-input v-model=\"addVideoDetail.topic\" placeholder=\"请输入\"\r\n                                    :disabled=\"startUpload\"></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"视频排序\">\r\n                                <el-input v-model=\"addVideoDetail.sort\" placeholder=\"请输入\"\r\n                                    :disabled=\"startUpload\"></el-input>\r\n                            </el-form-item>\r\n                            <el-form-item label=\"上传视频\">\r\n\r\n                                <el-upload ref=\"videoRef\" style=\"margin-left:14%;margin-top:5%\" class=\"avatar-uploader el-upload--text\"\r\n                                    :drag=\"Plus\" action=\"http://127.0.0.1:9251/study/videos/save\" multiple\r\n                                    :show-file-list=\"true\" :data=\"addVideoDetail\" :on-success=\"handleVideoSuccess\"\r\n                                    :before-upload=\"beforeUploadVideo\"  >\r\n                                    <i v-if=\"Plus\" class=\"el-icon-upload\"></i>\r\n                                    <div v-if=\"Plus\" class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\r\n                                    <div class=\"el-upload__tip\" slot=\"tip\">只能上传mp4/flv/avi文件，且不超过700MB</div>\r\n                                </el-upload>\r\n                            </el-form-item>\r\n\r\n                        </el-form>\r\n                    </div>\r\n                </template>\r\n\r\n                <span slot=\"footer\" class=\"dialog-footer\">\r\n                    <el-button @click=\"goDealDialogVisible = false\"> 取 消</el-button>\r\n                    <!-- <el-button type=\"primary\" @click=\"submit()\" :disabled=\"!uploadSuccess\"> 确 定</el-button> -->\r\n                </span>\r\n            </el-dialog>\r\n            <el-row :gutter=\"24\" style=\"width: 100%;\">\r\n                <el-col :span=\"18\">\r\n                    <div>\r\n                        <div v-if=\"playerOptions.length <= 0\"\r\n                            style=\"width: 100%;text-align: center;font-size: 34px;color: grey;height: 250px;border: 1px solid grey;padding-top: 150px;\">\r\n                            暂无视频 请先上传视频\r\n                        </div>\r\n                        <video-player v-if=\"playerOptions.length > 0\" class=\"video-player vjs-custom-skin\"\r\n                            ref=\"videoPlayer\" :playsinline=\"true\" :options=\"playerOptions[count]\"\r\n                            @play=\"onPlayerPlay($event, index)\" @pause=\"onPlayerPause($event)\"></video-player>\r\n \r\n                        <div style=\"margin: 20px 0;\"></div>\r\n                        <span v-if=\"roleId == 3\">\r\n\r\n                            提问： <p><el-input type=\"textarea\" placeholder=\"请输入内容\" v-model=\"Ask.content\" maxlength=\"300\"\r\n                                show-word-limit></el-input>\r\n                        </p>\r\n                        <el-button type=\"success\" @click=\"answer(Ask)\"> 提问</el-button>\r\n                        </span>\r\n\r\n                        <div style=\"margin: 200px 0;\"></div>\r\n                    </div>\r\n                </el-col>\r\n                <el-col :span=\"6\">\r\n                    <div>\r\n\r\n                        <div id=\"video-title\"> 目录</div>\r\n                        <hr>\r\n                        <div style=\"color: grey; padding: 10px 0 0 0\" v-if=\"videolist.length <= 0\">- 暂无视频 -</div>\r\n                        <div v-for=\"(item, index) in videolist\" :key=\"index\">\r\n                            <el-row :gutter=\"24\">\r\n                                <el-col :span=\"21\">\r\n\r\n                                    <el-button class=\"el\" @click=\"choose(index)\"\r\n                                        style=\"width: 100%; font-size: 11px; text-align: left;\">{{\r\n                                        item.topic | ellipsis }}</el-button>\r\n                                </el-col>\r\n                                <el-col :span=\"3\">\r\n\r\n                                    <el-button type=\"danger\" size=\"small\" @click=\"deletOneVideo(item.id)\"\r\n                                        v-if=\"roleId == 2\">\r\n                                        <i class=\"iconfont icon-r-delete\"></i>\r\n                                    </el-button>\r\n                                </el-col>\r\n                            </el-row>\r\n                        </div>\r\n\r\n                    </div>\r\n                </el-col>\r\n            </el-row>\r\n\r\n\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { videos, deleteVideo, askandanswer } from \"../../../api/studentweb/video.js\";\r\nimport Cookies from \"js-cookie\";\r\nexport default {\r\n    name: \"DetailOnlineWeb\",\r\n    data() {\r\n        return {\r\n            uploadSuccess: false,\r\n            startUpload: false,\r\n            roleId: 0,\r\n            goDealDialogVisible: false,\r\n            Plus: true,\r\n            videoFlag: false,\r\n            addVideoDetail: {\r\n                topic: '',\r\n                sort: 0,\r\n                videoTotalId: '',\r\n            },\r\n\r\n\r\n            Ask: {\r\n                content: '',\r\n                sender: '',\r\n                recipient: '',\r\n                videoId: '',\r\n            },\r\n            videolist: [],\r\n            playsinline: true,\r\n            playerOptions: [],\r\n            options: [],\r\n            count: '0',\r\n            roleId: '',\r\n            deleteOneVideoName: {\r\n                id: ''\r\n            },\r\n            video: {\r\n                videoTotalId: '',\r\n            },\r\n            ops: {\r\n                vuescroll: {},\r\n                scrollPanel: {},\r\n                rail: {\r\n                    keepShow: true,\r\n                },\r\n                bar: {\r\n                    hoverStyle: true,\r\n                    onlyShowBarOnScroll: false, //是否只有滚动的时候才显示滚动条\r\n                    background: '#F5F5F5', //滚动条颜色\r\n                    opacity: 0.5, //滚动条透明度\r\n                    'overflow-x': 'hidden',\r\n                },\r\n                videoData: [],\r\n                tagRoute: '',\r\n            },\r\n        };\r\n\r\n    },\r\n\r\n\r\n\r\n\r\n    created() {\r\n        this.roleId = Cookies.get('roleId')\r\n        this.Ask.sender = Cookies.get('userId')\r\n        this.Ask.recipient = this.$route.query.userId;\r\n        this.video.videoTotalId = this.$route.query.videoTotalId;\r\n        this.addVideoDetail.videoTotalId = this.$route.query.videoTotalId;\r\n        this.Ask.videoId = this.$route.query.videoTotalId;\r\n        this.listAllStudentsScore(this.video)\r\n        // this.getMovieList();\r\n        this.roleId = Cookies.get('roleId')\r\n        console.log(111)\r\n        console.log(this.$route.path)\r\n        if(this.$route.path == '/teachervideo' && this.roleId != 2) {\r\n            this.$router.push(\"/login\")\r\n        }\r\n        if(this.$route.path == '/detailonlineweb' && this.roleId != 3) {\r\n            this.$router.push(\"/login\")\r\n\r\n        }\r\n    },\r\n    methods: {\r\n\r\n\r\n        submit() {\r\n            this.goDealDialogVisible = false;\r\n            this.listAllStudentsScore(this.video);\r\n            this.uploadSuccess = false\r\n        },\r\n\r\n\r\n        // 视频上传前执行\r\n        beforeUploadVideo(file) {\r\n            if (this.addVideoDetail.topic == null || this.addVideoDetail.topic.trim() == \"\") {\r\n                this.$message.error('请先填写视频标题！')\r\n                return false\r\n            }\r\n            this.startUpload = true\r\n            let max = 700 // 最大不能超过MB\r\n            const maxMemory = file.size / 1024 / 1024 < max\r\n            if (['video/mp4', 'video/ogg', 'video/flv', 'video/avi', 'video/wmv', 'video/rmvb'].indexOf(file.type) === -1) {\r\n                this.$message.error('请上传正确的视频格式')\r\n                return false\r\n            }\r\n            if (!maxMemory) {\r\n                this.$message.error('上传视频大小不能超过700MB哦!')\r\n                return false\r\n            }\r\n        },\r\n        // 视频上传过程中执行\r\n        uploadVideoProcess(event, file, fileList) {\r\n            this.Plus = false\r\n            this.videoFlag = true\r\n            this.videoUploadPercent = file.percentage.toFixed(0)\r\n        },\r\n        // 视频上传成功是执行\r\n        handleVideoSuccess(res, file) {\r\n            this.Plus = false\r\n            this.videoUploadPercent = 100\r\n            // 如果为200代表视频保存成功\r\n            if (res.resCode === '200') {\r\n                // 接收视频传回来的名称和保存地址\r\n                this.videoForm.videoId = res.newVidoeName\r\n                this.videoForm.videoUrl = res.VideoUrl\r\n                this.$message.success('视频上传成功！')\r\n            } else {\r\n                this.$message.success('视频上传成功')\r\n                \r\n            }\r\n            this.goDealDialogVisible = false\r\n            this.uploadSuccess = true\r\n            this.listAllStudentsScore(this.video);\r\n        },\r\n\r\n\r\n        addVideo() {\r\n            this.addVideoDetail = {\r\n                topic: '',\r\n                sort: 0,\r\n                videoTotalId: '',\r\n            }\r\n            this.uploadSuccess = false\r\n            this.startUpload = false\r\n            this.goDealDialogVisible = true\r\n            this.addVideoDetail.videoTotalId = this.$route.query.videoTotalId;\r\n            setTimeout(() => {\r\n                this.$refs.videoRef.clearFiles()\r\n                this.listAllStudentsScore(this.video)\r\n                \r\n                this.Plus = true\r\n            }, 1);\r\n        },\r\n\r\n        goDealHandleClose() {\r\n\r\n        },\r\n        answer(ask) {\r\n            askandanswer(ask).then(resp => {\r\n                if (resp.data.code == 200) {\r\n                    this.$message({\r\n                        message: '留言成功，请到问答社区查看结果',\r\n                        type: 'success'\r\n                    });\r\n                    this.$router.push(\"/askandanswer\")\r\n                } else {\r\n                    this.$message.error('留言失败');\r\n                }\r\n            })\r\n        },\r\n        choose(index) {\r\n            this.count = index;\r\n            console.log(index, '9999')\r\n        },\r\n\r\n\r\n        deletOneVideo(id) {\r\n            this.deleteOneVideoName.id = id\r\n            deleteVideo(this.deleteOneVideoName).then(resp => {\r\n                if (resp.data.code == 200) {\r\n                    this.$message({\r\n                        message: '删除视频',\r\n                        type: 'success'\r\n                    });\r\n                    this.listAllStudentsScore(this.video)\r\n                } else {\r\n                    this.$message.error('删除失败');\r\n                }\r\n            })\r\n        },\r\n\r\n\r\n        getMovieList() {\r\n            // 这里正常来说应该是从后台获取的数据，以下操作都是在成功的回调函数里\r\n            for (var i = 0; i < this.videolist.length; i++) {\r\n                let arrs = {\r\n                    playbackRates: [1.0, 2.0, 3.0], //播放速度\r\n                    autoplay: false, //如果true,浏览器准备好时开始回放。\r\n                    muted: false, // 默认情况下将会消除任何音频。\r\n                    loop: false, // 导致视频一结束就重新开始。\r\n                    preload: \"auto\", // 建议浏览器在<video>加载元素后是否应该开始下载视频数据。auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）\r\n                    language: \"zh-CN\",\r\n                    aspectRatio: \"16:9\", // 将播放器置于流畅模式，并在计算播放器的动态大小时使用该值。值应该代表一个比例 - 用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\r\n                    fluid: true, // 当true时，Video.js player将拥有流体大小。换句话说，它将按比例缩放以适应其容器。\r\n                    sources: [\r\n                        {\r\n                            type: \"video/mp4\",\r\n                            src: this.$store.state.baseApi + this.videolist[i].videoUrl //url地址\r\n                        }\r\n                    ],\r\n                    poster: \"\", //封面地址\r\n                    notSupportedMessage: \"此视频暂无法播放，请稍后再试\", //允许覆盖Video.js无法播放媒体源时显示的默认信息。\r\n                    controlBar: {\r\n                        timeDivider: true,\r\n                        durationDisplay: true,\r\n                        remainingTimeDisplay: false,\r\n                        fullscreenToggle: true //全屏按钮\r\n                    }\r\n                };\r\n                this.playerOptions.push(arrs);\r\n            }\r\n            console.log(this.videolist.size, '888')\r\n        },\r\n        onPlayerPlay(player, index) {\r\n\r\n\r\n            var that = this.$refs.videoPlayer;\r\n            for (let i = 0; i < that.length; i++) {\r\n                if (i != index)\r\n                    that[i].player.pause()\r\n            }\r\n        },\r\n        onPlayerPause(player) {\r\n\r\n\r\n        },\r\n\r\n        listAllStudentsScore(page) {\r\n            console.log(\"9998\")\r\n            console.log(page)\r\n            videos(page).then(resp => {\r\n                this.videolist = resp.data.resultData;\r\n                this.getMovieList();\r\n\r\n            })\r\n        }\r\n    },\r\n\r\n    filters: {\r\n        ellipsis(value) {\r\n            if (!value) return '';\r\n            if (value.length > 15) {\r\n                return value.slice(0, 15) + '...'\r\n            }\r\n            return value\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.containvideo {\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n}\r\n\r\n.item {\r\n    width: 20px;\r\n    height: 20px;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n}\r\n\r\n\r\n.videos {\r\n    width: 19%;\r\n    margin: 0 0 0 8px;\r\n    height: 50%;\r\n    border: 3px solid grey;\r\n}\r\n\r\n#video-title {\r\n    font-size: 24px;\r\n    color: black;\r\n    font-weight: 600;\r\n}\r\n\r\n.vid {\r\n    width: 80%;\r\n    height: 20%;\r\n}\r\n</style>"]}]}