{"remainingRequest":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\src\\views\\coursemanagement\\CourseManagement.vue?vue&type=style&index=0&id=f8787ff6&scoped=true&lang=css&","dependencies":[{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\src\\views\\coursemanagement\\CourseManagement.vue","mtime":1715162150846},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1711182487975},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1711182506221},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\node_modules\\postcss-loader\\src\\index.js","mtime":1711182496599},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1711182484313},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\OnlineLearn\\src\\OnlineLearnVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1711182506214}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouaXRlbSB7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOw0KfQ0KDQouY3NjIHsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCn0NCg0KLmNzIHsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCn0NCg0KaDQgew0KICAgIGRpc3BsYXk6IGlubGluZSAhaW1wb3J0YW50Ow0KfQ0K"},{"version":3,"sources":["CourseManagement.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2IA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"CourseManagement.vue","sourceRoot":"src/views/coursemanagement","sourcesContent":["<template>\r\n    <div class=\"block\">\r\n        <div style=\"font-size: 28px;color:grey;font-weight: 600;width: 100%;padding: 50px 0 50px 10px;\" v-if=\"shduleData.length <= 0\">\r\n            - 暂无数据 -\r\n        </div>\r\n        <el-timeline>\r\n\r\n            <div v-for=\"t in shduleData\" :key=\"t.id\">\r\n                <el-timeline-item :timestamp=t.createTime placement=\"top\">\r\n                    <el-card>\r\n                        <div class=\"cs\">\r\n                            <span><el-tag type=\"success\">{{ t.senderName }}提问:</el-tag></span>\r\n                            <span>\r\n                                <el-tag type=\"warning\">问题来源：{{ t.topic }}</el-tag>\r\n                            </span>\r\n\r\n                            <span><el-tag type=\"success\">{{ t.recipientName }}回答</el-tag></span>\r\n                        </div>\r\n                        <el-divider content-position=\"center\">下面是提问记录</el-divider>\r\n                        <div class=\"csc\">\r\n                            <el-input type=\"textarea\" :rows=\"4\" placeholder=\"请输入内容\" v-model=t.content>\r\n                            </el-input>\r\n                            <el-input type=\"textarea\" :rows=\"4\" placeholder=\"请输入内容\" v-model=t.restore>\r\n                            </el-input>\r\n                        </div>\r\n\r\n                        <div :value=\"count\" class=\"item\" style=\"margin-top: 15px;\">\r\n                            <el-button type=\"success\" @click=\"restor(t)\"> 回复</el-button>\r\n                        </div>\r\n                    </el-card>\r\n                </el-timeline-item>\r\n            </div>\r\n\r\n            <div v-for=\"t in shduleData\" :key=\"t.id\">\r\n                <el-timeline-item :timestamp=t.createTime placement=\"top\">\r\n                    <el-card>\r\n                        <div class=\"cs\">\r\n                            <span><el-tag type=\"success\">{{ t.senderName }}提问:</el-tag></span>\r\n                            <span>\r\n                                <el-tag type=\"warning\">问题来源：{{ t.topic }}</el-tag>\r\n                            </span>\r\n\r\n                            <span><el-tag type=\"success\">{{ t.recipientName }}回答</el-tag></span>\r\n                        </div>\r\n                        <el-divider content-position=\"center\">下面是提问记录</el-divider>\r\n                        <div class=\"csc\">\r\n                            <el-input type=\"textarea\" :rows=\"4\" placeholder=\"请输入内容\" v-model=t.content>\r\n                            </el-input>\r\n                            <el-input type=\"textarea\" :rows=\"4\" placeholder=\"请输入内容\" v-model=t.restore>\r\n                            </el-input>\r\n                        </div>\r\n\r\n                        <div :value=\"count\" class=\"item\" style=\"margin-top: 15px;\">\r\n                            <el-button type=\"success\" @click=\"restor(t)\"> 回复</el-button>\r\n                        </div>\r\n                    </el-card>\r\n                </el-timeline-item>\r\n            </div>\r\n\r\n            <div v-for=\"t in shduleData\" :key=\"t.id\">\r\n                <el-timeline-item :timestamp=t.createTime placement=\"top\">\r\n                    <el-card>\r\n                        <div class=\"cs\">\r\n                            <span><el-tag type=\"success\">{{ t.senderName }}提问:</el-tag></span>\r\n                            <span>\r\n                                <el-tag type=\"warning\">问题来源：{{ t.topic }}</el-tag>\r\n                            </span>\r\n\r\n                            <span><el-tag type=\"success\">{{ t.recipientName }}回答</el-tag></span>\r\n                        </div>\r\n                        <el-divider content-position=\"center\">下面是提问记录</el-divider>\r\n                        <div class=\"csc\">\r\n                            <el-input type=\"textarea\" :rows=\"4\" placeholder=\"请输入内容\" v-model=t.content>\r\n                            </el-input>\r\n                            <el-input type=\"textarea\" :rows=\"4\" placeholder=\"请输入内容\" v-model=t.restore>\r\n                            </el-input>\r\n                        </div>\r\n\r\n                        <div :value=\"count\" class=\"item\" style=\"margin-top: 15px;\">\r\n                            <el-button type=\"success\" @click=\"restor(t)\"> 回复</el-button>\r\n                        </div>\r\n                    </el-card>\r\n                </el-timeline-item>\r\n            </div>\r\n        </el-timeline>\r\n        <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"page.page\"\r\n            :page-sizes=\"[10, 20, 30, 40]\" :page-size=\"page.pageSize\" layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"shduleData.length\">\r\n        </el-pagination>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { listAllShdule, addShdule } from \"../../api/shdule\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nexport default {\r\n    name: \"CourseManagement\",\r\n    data() {\r\n        return {\r\n            shduleData: [],\r\n            page: {\r\n                page: 1, //初始页\r\n                pageSize: 10,    //    每页的数据\r\n                userId: ''\r\n            },\r\n            count: 0,\r\n        }\r\n    },\r\n    created() {\r\n        this.page.userId = Cookies.get('userId')\r\n        this.listShdule(this.page)\r\n    },\r\n    methods: {\r\n        restor(shduleData) {\r\n            shduleData.status = 1\r\n            addShdule(shduleData).then(resp => {\r\n                if (resp.data.code == 200) {\r\n                    this.$message({\r\n                        message: '回复成功 ',\r\n                        type: 'success'\r\n                    });\r\n                    this.count = this.count + 1\r\n                    this.listShdule(this.page)\r\n                } else {\r\n                    this.$message.error('回复失败');\r\n                }\r\n            })\r\n        },\r\n        listShdule(page) {\r\n            listAllShdule(page).then(resp => {\r\n                this.shduleData = resp.data.resultData.data\r\n            })\r\n        }\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.item {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n}\r\n\r\n.csc {\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n\r\n.cs {\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n\r\nh4 {\r\n    display: inline !important;\r\n}\r\n</style>\r\n"]}]}